// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HackZurich 2020 API\n",
    "title": "HackZurich 2020",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User login",
        "operationId": "login",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/loginResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/match": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get recipes matched for user",
        "operationId": "getRecipeMatchList",
        "responses": {
          "200": {
            "description": "Recipe list",
            "schema": {
              "$ref": "#/definitions/recipeMatchList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/match/{id}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get details of the matched recipe",
        "operationId": "getRecipeDetails",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details",
            "schema": {
              "$ref": "#/definitions/recipeDetails"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Invite to cook together",
        "operationId": "initiateCooking",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Invited"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Tell other part that not now.",
        "operationId": "rejectCooking",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Rejected"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/match/{id}/chat": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get items from the chat",
        "operationId": "getChatItems",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details",
            "schema": {
              "$ref": "#/definitions/chatItemList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Post new chat item",
        "operationId": "postChatItem",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chatItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Posted"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get list of user products",
        "operationId": "getProductList",
        "responses": {
          "200": {
            "description": "Product list",
            "schema": {
              "$ref": "#/definitions/productList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/{id}": {
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Delete product from user list",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "chatItem": {
      "type": "object",
      "required": [
        "type",
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/chatItemData"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/chatItemType"
        }
      }
    },
    "chatItemData": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "missedIngredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ingredientActionOptions"
          }
        },
        "recipe": {
          "$ref": "#/definitions/recipeDetails"
        }
      }
    },
    "chatItemList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/chatItem"
      }
    },
    "chatItemType": {
      "type": "string",
      "enum": [
        "RECIPE",
        "MESSAGE",
        "INGREDIENT",
        "INGREDIENT_ACTION"
      ]
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "ingredientActionOptions": {
      "type": "object",
      "properties": {
        "delivery": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "shop": {
          "type": "string"
        }
      }
    },
    "loginRequest": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "email",
          "type": "string",
          "format": "email"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "auth token",
          "type": "string"
        }
      }
    },
    "product": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "productList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/product"
      }
    },
    "recipeDetails": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "imageURL": {
          "type": "string"
        },
        "ingredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/recipeIngredient"
          }
        },
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "string"
        }
      }
    },
    "recipeIngredient": {
      "type": "object",
      "required": [
        "productID",
        "name",
        "isMissed",
        "userID"
      ],
      "properties": {
        "isMissed": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    },
    "recipeMatch": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "distance": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "isColleague": {
          "type": "boolean"
        },
        "isFull": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/recipeMatchState"
        }
      }
    },
    "recipeMatchList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/recipeMatch"
      }
    },
    "recipeMatchState": {
      "type": "string",
      "enum": [
        "NEW",
        "INVITED",
        "ACCEPTED",
        "NOT_NOW"
      ]
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HackZurich 2020 API\n",
    "title": "HackZurich 2020",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User login",
        "operationId": "login",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/loginResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/match": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get recipes matched for user",
        "operationId": "getRecipeMatchList",
        "responses": {
          "200": {
            "description": "Recipe list",
            "schema": {
              "$ref": "#/definitions/recipeMatchList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/match/{id}": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get details of the matched recipe",
        "operationId": "getRecipeDetails",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details",
            "schema": {
              "$ref": "#/definitions/recipeDetails"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Invite to cook together",
        "operationId": "initiateCooking",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Invited"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Tell other part that not now.",
        "operationId": "rejectCooking",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Rejected"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/match/{id}/chat": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get items from the chat",
        "operationId": "getChatItems",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details",
            "schema": {
              "$ref": "#/definitions/chatItemList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Post new chat item",
        "operationId": "postChatItem",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chatItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Posted"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get list of user products",
        "operationId": "getProductList",
        "responses": {
          "200": {
            "description": "Product list",
            "schema": {
              "$ref": "#/definitions/productList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/product/{id}": {
      "delete": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Delete product from user list",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "chatItem": {
      "type": "object",
      "required": [
        "type",
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/chatItemData"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/chatItemType"
        }
      }
    },
    "chatItemData": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "missedIngredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ingredientActionOptions"
          }
        },
        "recipe": {
          "$ref": "#/definitions/recipeDetails"
        }
      }
    },
    "chatItemList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/chatItem"
      }
    },
    "chatItemType": {
      "type": "string",
      "enum": [
        "RECIPE",
        "MESSAGE",
        "INGREDIENT",
        "INGREDIENT_ACTION"
      ]
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "ingredientActionOptions": {
      "type": "object",
      "properties": {
        "delivery": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "shop": {
          "type": "string"
        }
      }
    },
    "loginRequest": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "email",
          "type": "string",
          "format": "email"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "description": "auth token",
          "type": "string"
        }
      }
    },
    "product": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "productList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/product"
      }
    },
    "recipeDetails": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "imageURL": {
          "type": "string"
        },
        "ingredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/recipeIngredient"
          }
        },
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "string"
        }
      }
    },
    "recipeIngredient": {
      "type": "object",
      "required": [
        "productID",
        "name",
        "isMissed",
        "userID"
      ],
      "properties": {
        "isMissed": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        }
      }
    },
    "recipeMatch": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "distance": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "isColleague": {
          "type": "boolean"
        },
        "isFull": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/recipeMatchState"
        }
      }
    },
    "recipeMatchList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/recipeMatch"
      }
    },
    "recipeMatchState": {
      "type": "string",
      "enum": [
        "NEW",
        "INVITED",
        "ACCEPTED",
        "NOT_NOW"
      ]
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
